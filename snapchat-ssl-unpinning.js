var certs = ["0x308206b43082059ca003020102021001cbde88632a84f5adf59a52376717a7300d06092a864886f70d01010b0500304f310b300906035504061302555331153013060355040a130c446967694365727420496e633129302706035504031320446967694365727420544c532052534120534841323536203230323020434131301e170d3232303431333030303030305a170d3233303431333233353935395a3064310b3009060355040613025553311330110603550408130a43616c69666f726e6961311530130603550407130c53616e7461204d6f6e69636131123010060355040a1309536e617020496e632e3115301306035504030c0c2a2e73632d63646e2e6e657430820122300d06092a864886f70d01010105000382010f003082010a0282010100ac002513aff817a2d5fa230fb19b1edca80bbb4112b964c68b6ff8d18c4cbb66acf24334ad518a493e4eadb2aef94785f1235471e729eb9dbd8eb2d39feb067659a5d14e1e62d1687d5000cbaeec4e0757b8bfe44e419f59b941d4dad52f164c51c04ccee193cccf9e436faa1448d61642c970b17334506322536b61e34800adabdefeae9ba13f45aa82e101e8339a29730428bbfddb7e9f0bbf4a67c5082632330f5e2cc56406d0537bef311eaacdfb1d0a43a5099d27ed60220e00650fa9d9adfd29916ce133d0bb544ec92211c6e0645a10f4270dbdece33429e92123aaaf0e0a77ecdfde27e0eff9cf8164f93f1bb69dc41efde7a704e5f9d24110cf5f790203010001a382037530820371301f0603551d23041830168014b76ba2eaa8aa848c79eab4da0f98b2c59576b9f4301d0603551d0e04160414ad1fe795590526e7c56cb1c1cb83fb83ad082a8130230603551d11041c301a820c2a2e73632d63646e2e6e6574820a73632d63646e2e6e6574300e0603551d0f0101ff0404030205a0301d0603551d250416301406082b0601050507030106082b0601050507030230818f0603551d1f0481873081843040a03ea03c863a687474703a2f2f63726c332e64696769636572742e636f6d2f4469676943657274544c53525341534841323536323032304341312d342e63726c3040a03ea03c863a687474703a2f2f63726c342e64696769636572742e636f6d2f4469676943657274544c53525341534841323536323032304341312d342e63726c303e0603551d20043730353033060667810c0102023029302706082b06010505070201161b687474703a2f2f7777772e64696769636572742e636f6d2f435053307f06082b0601050507010104733071302406082b060105050730018618687474703a2f2f6f6373702e64696769636572742e636f6d304906082b06010505073002863d687474703a2f2f636163657274732e64696769636572742e636f6d2f4469676943657274544c53525341534841323536323032304341312d312e63727430090603551d13040230003082017b060a2b06010401d6790204020482016b048201670165007500e83ed0da3ef5063532e75728bc896bc903d3cbd1116beceb69e1777d6d06bd6e0000018023f978b7000004030046304402202125fe3c87194469782cdf2646bd1fa5ddf66cecdea85807812df6982c0355490220021a5619744831c89c6cccb474386c6b157c8f971bf3a5ae0ff517cbcdb3996900750035cf191bbfb16c57bf0fad4c6d42cbbbb627202651ea3fe12aefa803c33bd64c0000018023f978e1000004030046304402200c7a3e25f4be7431311b5c9a569115beb1699079acfe00bf06924c2aef2195a702200e6eae64ae6d87100e427cb2c3c61cf1e383a88d190b577c07bf12ec261d9cc6007500b3737707e18450f86386d605a9dc11094a792db1670c0b87dcf0030e7936a59a0000018023f9790000000403004630440220224892611a81c10c7bdae67dba55f17ea51695a9626192d23586ecd3a3b6583202204c26067826a2e680580c388a8e14ccf6f24742cabd348ea85249cbf9c4848e8b300d06092a864886f70d01010b0500038201010035ee3d29283aac2dcaf98c47a7025728f9a6e27375443ccca896bb5b7369e41431bb5a7205dbd70e7d1edd1389bcf8b7dc2686e25b49b90455c55428e6860e4b8d0f52ad28677915c5ace392f0f06d597ebbb164231d26dcec272b657a947a953274654b89fb918822a3bb7fb7abd7db083927ccc71c092ca946a452f36a3e6402bf61e07ab87da7477a7a12427bb7368f501ff229c6e135d8243aa97fe7356f1de91fe0d5219465203764e03d75627eb4aacbddae5c9aecc0b04bc7d7e42f1b811a193202374063aa63dca37077f02bb9861f3ae691e718f993f71d39e094933e6a8aea19ae15577001e527253aee9a0cfd1df6bede9c730b5347e487d16a77","0x308204be308203a6a003020102021006d8d904d5584346f68a2fa754227ec4300d06092a864886f70d01010b05003061310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d3120301e06035504031317446967694365727420476c6f62616c20526f6f74204341301e170d3231303431343030303030305a170d3331303431333233353935395a304f310b300906035504061302555331153013060355040a130c446967694365727420496e633129302706035504031320446967694365727420544c53205253412053484132353620323032302043413130820122300d06092a864886f70d01010105000382010f003082010a0282010100c14bb3654770bcdd4f58dbec9cedc366e51f311354ad4a66461f2c0aec6407e52edcdcb90a20eddfe3c4d09e9aa97a1d8288e51156db1e9f58c251e72c340d2ed292e156cbf1795fb3bb87ca25037b9a52416610604f571349f0e8376783dfe7d34b674c2251a6df0e9910ed57517426e27dc7ca622e131b7f238825536fc13458008b84fff8bea75849227b96ada2889b15bca07cdfe951a8d5b0ed37e236b4824b62b5499aecc767d6e33ef5e3d6125e44f1bf71427d58840380b18101faf9ca32bbb48e278727c52b74d4a8d697dec364f9cace53a256bc78178e490329aefb494fa415b9cef25c19576d6b79a72ba2272013b5d03d40d321300793ea99f50203010001a38201823082017e30120603551d130101ff040830060101ff020100301d0603551d0e04160414b76ba2eaa8aa848c79eab4da0f98b2c59576b9f4301f0603551d2304183016801403de503556d14cbb66f0a3e21b1bc397b23dd155300e0603551d0f0101ff040403020186301d0603551d250416301406082b0601050507030106082b06010505070302307606082b06010505070101046a3068302406082b060105050730018618687474703a2f2f6f6373702e64696769636572742e636f6d304006082b060105050730028634687474703a2f2f636163657274732e64696769636572742e636f6d2f4469676943657274476c6f62616c526f6f7443412e63727430420603551d1f043b30393037a035a0338631687474703a2f2f63726c332e64696769636572742e636f6d2f4469676943657274476c6f62616c526f6f7443412e63726c303d0603551d2004363034300b06096086480186fd6c02013007060567810c01013008060667810c0102013008060667810c0102023008060667810c010203300d06092a864886f70d01010b050003820101008032ce5e0bdd6e5a0d0aafe1d684cbc08efa8570edda5db30cf72b7540fe850afaf33178b7704b1a8958ba80bdf36b1de97ecf0bba589c59d490d3fd6cfdd0986db771825bcf6d0b5a09d07bdec443d82aa4de9e41265fbb8f99cbddaee1a86f9f87fe74b71f1b20abb14fc6f5675d5d9b3ce9ff69f7616cd6d9f3fd36c6ab038876d24b2e7586e3fcd8557d26c21177df3e02b67cf3ab7b7a86366fb8f7d89371cf86df7330fa7babed2a59c842843b11171a52f3c90e147da25b7267ba71ed574766c5b8024a65345e8bd02a3c209c51994ce7529ef76b112b0d927e1de88aeb36164387ea2a63bf753febdec403bb0a3cf730efebaf4cfc8b3610733ef3a4","0x308203af30820297a0030201020210083be056904246b1a1756ac95991c74a300d06092a864886f70d01010505003061310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d3120301e06035504031317446967694365727420476c6f62616c20526f6f74204341301e170d3036313131303030303030305a170d3331313131303030303030305a3061310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d3120301e06035504031317446967694365727420476c6f62616c20526f6f7420434130820122300d06092a864886f70d01010105000382010f003082010a0282010100e23be11172dea8a4d3a357aa50a28f0b7790c9a2a5ee12ce965b010920cc0193a74e30b753f743c46900579de28d22dd870640008109cece1b83bfdfcd3b7146e2d666c705b37627168f7b9e1e957deeb748a308dad6af7a0c3906657f4a5d1fbc17f8abbeee28d7747f7a78995985686e5c23324bbf4ec0e85a6de370bf7710bffc01f685d9a844105832a97518d5d1a2be47e2276af49a33f84908608bd45fb43a84bfa1aa4a4c7d3ecf4f5f6c765ea04b37919edc22e66dce141a8e6acbfecdb3146417c75b299e32bff2eefad30b42d4abb74132da0cd4eff881d5bb8d583fb51be84928a270da3104ddf7b216f24c0a4e07a8ed4a3d5eb57fa390c3af270203010001a3633061300e0603551d0f0101ff040403020186300f0603551d130101ff040530030101ff301d0603551d0e0416041403de503556d14cbb66f0a3e21b1bc397b23dd155301f0603551d2304183016801403de503556d14cbb66f0a3e21b1bc397b23dd155300d06092a864886f70d01010505000382010100cb9c37aa4813120afadd449c4f52b0f4dfae04f5797908a32418fc4b2b84c02db9d5c7fef4c11f58cbb86d9c7a74e79829ab11b5e370a0a1cd4c8899938c9170e2ab0f1cbe93a9ff63d5e40760d3a3bf9d5b09f1d58ee353f48e63fa3fa7dbb466df6266d6d16e418df22db5ea774a9f9d58e22b59c04023ed2d2882453e7954922698e08048a837eff0d6796016deace80ecd6eac4417382f49dae1453e2ab93653cf3a5006f72ee8c457496c612118d504ad783c2c3a806ba7ebaf1514e9d889c1b9386ce2916c8aff64b977255730c01b24a3e1dce9df477cb5b424080530ec2dbd0bbf45bf50b9a9f3eb980112adc888c698345f8d0a3cc6e9d595956dde"]
function toString(s) {
  return String([].map.call(s, function (v) { return String.fromCharCode(v); }).join(''));
}
function toArray(s) {
  return [].slice.call(s).map((v) => v.charCodeAt(0));
}

function padLeft(s) {
  if (s.length < 2) return '0' + s;
  return s;
}

function toBytes(s) {
  if (s.substr(0, 2) === '0x') s = s.substr(2);
  const ary = [].slice.call(s).reduce((r, v, i) => {
    if (i % 2) r[r.length - 1].push(v);
    else r.push([ v ]);
    return r;
  }, []).map((v) => parseInt(v.join(''), 16));
  console.log(ary);
  return ary;
}

function toHex(ary) {
  const slice = [].slice.call(new Uint8Array(ary));
  return '0x' + slice.map((v) => padLeft(v.toString(16))).join('');
}


setTimeout(function () {
  Java.perform(function () {
    var cls = Java.use('com.android.org.conscrypt.TrustManagerImpl');

    var ArrayList = Java.use('java.util.ArrayList');
    var Arrays = Java.use('java.util.Arrays');
    var method = cls.checkServerTrusted;
    var X509Certificate = Java.use('java.security.cert.X509Certificate');
    var CertificateFactory = Java.use('java.security.cert.CertificateFactory');
    var InputStream = Java.use('java.io.ByteArrayInputStream');
    var getEncoded = X509Certificate.getEncoded;
    cls.checkServerTrusted.overload('[Ljava.security.cert.X509Certificate;', 'java.lang.String', 'java.lang.String').implementation = function (...args) {
      var list = args[0];
      var certObjects = Arrays.asList(certs.map((v) => CertificateFactory.getInstance('X.509').generateCertificate(InputStream.$new(Java.array('byte', toBytes(v))))));
      console.log('result: OK');
      return certObjects;
    };
  });
}, 0);
